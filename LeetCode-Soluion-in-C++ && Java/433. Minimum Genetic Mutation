# LeetCode-Soluion-in-C-Java


433. Minimum Genetic Mutation


Medium

C++:

// Time Complexity : O(n) where n is the length of the string and space complexity is O(n)

class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        vector<int> vis(bank.size() , 0);
        queue<string> q;
        q.push(start);
        int ans = 0;
        while(!q.empty()){
            int size = q.size();
            while(size--){
                string node = q.front();
                q.pop();
                if(node == end) return ans;
                for(int i = 0 ; i < bank.size() ; i++){
                    if(vis[i]) continue;
                    int count = 0;
                    for(int j = 0 ; j < 8 ; j++){
                        if(node[j] != bank[i][j]) count++;
                    }
                    if(count == 1){
                        vis[i] = 1;
                        q.push(bank[i]);
                    }
                }
            }
            ans++;
        }
        return -1;
    }
};


Java:


// Time Complexity : O(n) where n is the length of the string and space complexity is O(n)


class Solution {
    public int minMutation(String start, String end, String[] bank) {
        int n = bank.length;
        boolean[] vis = new boolean[n];
        Queue<String> q = new LinkedList<>();
        q.add(start);
        int ans = 0;
        while(!q.isEmpty()){
            int size = q.size();
            while(size-- > 0){
                String node = q.poll();
                if(node.equals(end)) return ans;
                for(int i = 0 ; i < n ; i++){
                    if(vis[i]) continue;
                    int count = 0;
                    for(int j = 0 ; j < 8 ; j++){
                        if(node.charAt(j) != bank[i].charAt(j)) count++;
                    }
                    if(count == 1){
                        vis[i] = true;
                        q.add(bank[i]);
                    }
                }
            }
            ans++;
        }
        return -1;
    }
}
