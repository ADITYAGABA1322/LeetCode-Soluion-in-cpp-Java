73. Set Matrix Zeroes


4 Dec 2023



Medium



C++:

// Time Complexity : O(n*m) where n is the size of the vector nums and space complexity is O(1)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) { // function to find the setZeroes
        int n=matrix.size(); // variable to store the size of the matrix
        int m=matrix[0].size(); // variable to store the size of the matrix
        bool row=false; // variable to store the row
        bool col=false; // variable to store the col
        for(int i=0;i<n;i++){ // loop for i
            for(int j=0;j<m;j++){ // loop for j
                if(matrix[i][j]==0){ // if matrix[i][j] is equal to 0
                    if(i==0)row=true; // if i is equal to 0 update the row
                    if(j==0)col=true; // if j is equal to 0 update the col
                    matrix[i][0]=0; // update the matrix[i][0]
                    matrix[0][j]=0; // update the matrix[0][j]
                }
            }
        }
        for(int i=1;i<n;i++){ // loop for i
            for(int j=1;j<m;j++){ // loop for j
                if(matrix[i][0]==0 || matrix[0][j]==0)matrix[i][j]=0; // if matrix[i][0] is equal to 0 or matrix[0][j] is equal to 0 update the matrix[i][j]
            }
        }
        if(row){ // if row
            for(int i=0;i<m;i++)matrix[0][i]=0; // loop for i
        }
        if(col){ // if col
            for(int i=0;i<n;i++)matrix[i][0]=0; // loop for i
        }
    }
};

// 2nd Method

#include <vector>

class Solution {
public:
    void setZeroes(std::vector<std::vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();

        // Use first row and first column as flags
        bool firstRowZero = false;
        bool firstColZero = false;

        // Check if the first row should be zeroed
        for (int j = 0; j < m; j++) {
            if (matrix[0][j] == 0) {
                firstRowZero = true;
                break;
            }
        }

        // Check if the first column should be zeroed
        for (int i = 0; i < n; i++) {
            if (matrix[i][0] == 0) {
                firstColZero = true;
                break;
            }
        }

        // Use the first row and first column as flags to mark zero positions
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (matrix[i][j] == 0) {
                    matrix[0][j] = 0; // Mark the column
                    matrix[i][0] = 0; // Mark the row
                }
            }
        }

        // Set zeroes based on the flags in the first row and first column
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                    matrix[i][j] = 0;
                }
            }
        }

        // Set zeroes in the first row and first column if needed
        if (firstRowZero) {
            for (int j = 0; j < m; j++) {
                matrix[0][j] = 0;
            }
        }

        if (firstColZero) {
            for (int i = 0; i < n; i++) {
                matrix[i][0] = 0;
            }
        }
    }
};
