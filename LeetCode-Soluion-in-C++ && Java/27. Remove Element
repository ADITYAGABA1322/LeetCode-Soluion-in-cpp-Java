27. Remove Element



16 July 2023



Easy



C++:





// Time Complexity : O(n) where n is the length of the vector nums and space complexity is O(1)








class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int n = nums.size();  // variable to store the length of the vector nums
        int i = 0;  // variable to store the index
        for(int j = 0; j < n; j++){  // iterate through the vector nums
            if(nums[j] != val){  // if the current value is not equal to the target value
                nums[i] = nums[j];  // update the value at the index
                i++;  // increment the index
            }
        }
        return i;  // return the index
    }
};





Java:



// Time Complexity : O(n) where n is the length of the vector nums and space complexity is O(1)








class Solution {
    public int removeElement(int[] nums, int val) {
        int n = nums.length;  // variable to store the length of the vector nums
        int i = 0;  // variable to store the index
        for(int j = 0; j < n; j++){  // iterate through the vector nums
            if(nums[j] != val){  // if the current value is not equal to the target value
                nums[i] = nums[j];  // update the value at the index
                i++;  // increment the index
            }
        }
        return i;  // return the index
    }
}
