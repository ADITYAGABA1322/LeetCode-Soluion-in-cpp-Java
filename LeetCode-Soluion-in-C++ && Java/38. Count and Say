38. Count and Say



20 July 2023



Medium



C++:




// Time Complexity : O(n * m) where n is the length of the vector nums and space complexity is O(n + m)







class Solution {
public:
    string countAndSay(int n) {
        string result = "1";  // variable to store the result
        for(int i = 1; i < n; i++){  // iterate from 1 to n
            string temp = "";  // variable to store the temporary result
            int count = 1;  // variable to store the count
            for(int j = 1; j < result.length(); j++){  // iterate through the result
                if(result[j] == result[j - 1]){  // if the current value is equal to the previous value
                    count++;  // increment the count
                }
                else{  // if the current value is not equal to the previous value
                    temp += to_string(count) + result[j - 1];  // update the temp
                    count = 1;  // reset the count
                }
            }
            temp += to_string(count) + result[result.length() - 1];  // update the temp
            result = temp;  // update the result
        }
        return result;  // return the result
    }
};


2nd Method 



 class Solution {
public:
    string countAndSay(int n) {
        if(n==1) return "1";

        string s = countAndSay(n-1);

        int cnt=1;
        
        string ans="";

        for(int i=0; i<s.size(); i++){
            if(i<s.size() && s[i]==s[i+1]){
                cnt++;
            }
            else{
                ans+=char(cnt+int('0'));
                ans+=s[i];
                cnt=1;
            }
        }
        return ans;
    }
};







Jva:
