96. Unique Binary Search Trees



9 Aug 2023


Medium


C++:


// Time Complexity : O(n^2) where n is the size of the vector matrix and space complexity is O(n)


class Solution {
public:
    int numTrees(int n) {
        vector<int> dp(n+1, 0); // vector to store the result
        dp[0] = 1; // initialize the dp[0] to 1
        dp[1] = 1; // initialize the dp[1] to 1
        for(int i=2; i<=n; i++){ // loop for i
            for(int j=1; j<=i; j++){ // loop for j 
                dp[i] += dp[j-1] * dp[i-j]; // update the dp[i] ,  dp[j-1] used for left subtree and dp[i-j] used for right subtree 
            }
        }
        return dp[n]; // return the dp[n]
    }
};


Java:


Python:


Python3:


C:



C#


JavaScript:


Swift:


Dart:
